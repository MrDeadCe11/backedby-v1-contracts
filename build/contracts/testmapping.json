{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "d",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "subber",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "something",
              "type": "uint256"
            }
          ],
          "internalType": "struct testmapping.MyStruct[]",
          "name": "rtn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "22": "contracts/utils/testmapping.sol"
  },
  "ast": {
    "absolutePath": "contracts/utils/testmapping.sol",
    "exportedSymbols": {
      "testmapping": [
        3778
      ]
    },
    "id": 3779,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3706,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:22"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "testmapping",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3778,
        "linearizedBaseContracts": [
          3778
        ],
        "name": "testmapping",
        "nameLocation": "67:11:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "testmapping.MyStruct",
            "id": 3711,
            "members": [
              {
                "constant": false,
                "id": 3708,
                "mutability": "mutable",
                "name": "subber",
                "nameLocation": "119:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 3711,
                "src": "111:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3707,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "111:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3710,
                "mutability": "mutable",
                "name": "something",
                "nameLocation": "140:9:22",
                "nodeType": "VariableDeclaration",
                "scope": 3711,
                "src": "135:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3709,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "135:4:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MyStruct",
            "nameLocation": "92:8:22",
            "nodeType": "StructDefinition",
            "scope": 3778,
            "src": "85:71:22",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3716,
            "mutability": "mutable",
            "name": "data",
            "nameLocation": "187:4:22",
            "nodeType": "VariableDeclaration",
            "scope": 3778,
            "src": "161:30:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MyStruct_$3711_storage_$",
              "typeString": "mapping(uint256 => struct testmapping.MyStruct)"
            },
            "typeName": {
              "id": 3715,
              "keyType": {
                "id": 3712,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "169:4:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "161:25:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MyStruct_$3711_storage_$",
                "typeString": "mapping(uint256 => struct testmapping.MyStruct)"
              },
              "valueType": {
                "id": 3714,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3713,
                  "name": "MyStruct",
                  "nameLocations": [
                    "177:8:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3711,
                  "src": "177:8:22"
                },
                "referencedDeclaration": 3711,
                "src": "177:8:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MyStruct_$3711_storage_ptr",
                  "typeString": "struct testmapping.MyStruct"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3743,
              "nodeType": "Block",
              "src": "211:105:22",
              "statements": [
                {
                  "expression": {
                    "id": 3729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3719,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "221:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MyStruct_$3711_storage_$",
                          "typeString": "mapping(uint256 => struct testmapping.MyStruct storage ref)"
                        }
                      },
                      "id": 3721,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 3720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "226:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "221:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MyStruct_$3711_storage",
                        "typeString": "struct testmapping.MyStruct storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31333337",
                              "id": 3725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "248:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1337_by_1",
                                "typeString": "int_const 1337"
                              },
                              "value": "1337"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1337_by_1",
                                "typeString": "int_const 1337"
                              }
                            ],
                            "id": 3724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "240:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3723,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "240:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "240:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "37333331",
                          "id": 3727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "255:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7331_by_1",
                            "typeString": "int_const 7331"
                          },
                          "value": "7331"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_7331_by_1",
                            "typeString": "int_const 7331"
                          }
                        ],
                        "id": 3722,
                        "name": "MyStruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3711,
                        "src": "231:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MyStruct_$3711_storage_ptr_$",
                          "typeString": "type(struct testmapping.MyStruct storage pointer)"
                        }
                      },
                      "id": 3728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "231:29:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MyStruct_$3711_memory_ptr",
                        "typeString": "struct testmapping.MyStruct memory"
                      }
                    },
                    "src": "221:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MyStruct_$3711_storage",
                      "typeString": "struct testmapping.MyStruct storage ref"
                    }
                  },
                  "id": 3730,
                  "nodeType": "ExpressionStatement",
                  "src": "221:39:22"
                },
                {
                  "expression": {
                    "id": 3741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3731,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "270:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MyStruct_$3711_storage_$",
                          "typeString": "mapping(uint256 => struct testmapping.MyStruct storage ref)"
                        }
                      },
                      "id": 3733,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 3732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "275:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "270:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MyStruct_$3711_storage",
                        "typeString": "struct testmapping.MyStruct storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "34343434",
                              "id": 3737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "297:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4444_by_1",
                                "typeString": "int_const 4444"
                              },
                              "value": "4444"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4444_by_1",
                                "typeString": "int_const 4444"
                              }
                            ],
                            "id": 3736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "289:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3735,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "289:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "289:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "35353535",
                          "id": 3739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "304:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5555_by_1",
                            "typeString": "int_const 5555"
                          },
                          "value": "5555"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_5555_by_1",
                            "typeString": "int_const 5555"
                          }
                        ],
                        "id": 3734,
                        "name": "MyStruct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3711,
                        "src": "280:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MyStruct_$3711_storage_ptr_$",
                          "typeString": "type(struct testmapping.MyStruct storage pointer)"
                        }
                      },
                      "id": 3740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "280:29:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MyStruct_$3711_memory_ptr",
                        "typeString": "struct testmapping.MyStruct memory"
                      }
                    },
                    "src": "270:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MyStruct_$3711_storage",
                      "typeString": "struct testmapping.MyStruct storage ref"
                    }
                  },
                  "id": 3742,
                  "nodeType": "ExpressionStatement",
                  "src": "270:39:22"
                }
              ]
            },
            "id": 3744,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:2:22"
            },
            "returnParameters": {
              "id": 3718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:22"
            },
            "scope": 3778,
            "src": "197:119:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3776,
              "nodeType": "Block",
              "src": "378:92:22",
              "statements": [
                {
                  "expression": {
                    "id": 3758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3751,
                      "name": "rtn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3749,
                      "src": "388:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MyStruct_$3711_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct testmapping.MyStruct memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 3756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "409:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 3755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "394:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MyStruct_$3711_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct testmapping.MyStruct memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3753,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3752,
                              "name": "MyStruct",
                              "nameLocations": [
                                "398:8:22"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3711,
                              "src": "398:8:22"
                            },
                            "referencedDeclaration": 3711,
                            "src": "398:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MyStruct_$3711_storage_ptr",
                              "typeString": "struct testmapping.MyStruct"
                            }
                          },
                          "id": 3754,
                          "nodeType": "ArrayTypeName",
                          "src": "398:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_MyStruct_$3711_storage_$dyn_storage_ptr",
                            "typeString": "struct testmapping.MyStruct[]"
                          }
                        }
                      },
                      "id": 3757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "394:17:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MyStruct_$3711_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct testmapping.MyStruct memory[] memory"
                      }
                    },
                    "src": "388:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MyStruct_$3711_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct testmapping.MyStruct memory[] memory"
                    }
                  },
                  "id": 3759,
                  "nodeType": "ExpressionStatement",
                  "src": "388:23:22"
                },
                {
                  "expression": {
                    "id": 3766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3760,
                        "name": "rtn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3749,
                        "src": "421:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MyStruct_$3711_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct testmapping.MyStruct memory[] memory"
                        }
                      },
                      "id": 3762,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 3761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "425:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "421:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MyStruct_$3711_memory_ptr",
                        "typeString": "struct testmapping.MyStruct memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 3763,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "430:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MyStruct_$3711_storage_$",
                          "typeString": "mapping(uint256 => struct testmapping.MyStruct storage ref)"
                        }
                      },
                      "id": 3765,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 3764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "435:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "430:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MyStruct_$3711_storage",
                        "typeString": "struct testmapping.MyStruct storage ref"
                      }
                    },
                    "src": "421:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MyStruct_$3711_memory_ptr",
                      "typeString": "struct testmapping.MyStruct memory"
                    }
                  },
                  "id": 3767,
                  "nodeType": "ExpressionStatement",
                  "src": "421:16:22"
                },
                {
                  "expression": {
                    "id": 3774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3768,
                        "name": "rtn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3749,
                        "src": "447:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MyStruct_$3711_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct testmapping.MyStruct memory[] memory"
                        }
                      },
                      "id": 3770,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 3769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "451:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "447:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MyStruct_$3711_memory_ptr",
                        "typeString": "struct testmapping.MyStruct memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 3771,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "456:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MyStruct_$3711_storage_$",
                          "typeString": "mapping(uint256 => struct testmapping.MyStruct storage ref)"
                        }
                      },
                      "id": 3773,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 3772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "461:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "456:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MyStruct_$3711_storage",
                        "typeString": "struct testmapping.MyStruct storage ref"
                      }
                    },
                    "src": "447:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MyStruct_$3711_memory_ptr",
                      "typeString": "struct testmapping.MyStruct memory"
                    }
                  },
                  "id": 3775,
                  "nodeType": "ExpressionStatement",
                  "src": "447:16:22"
                }
              ]
            },
            "functionSelector": "8a054ac2",
            "id": 3777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "d",
            "nameLocation": "331:1:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:2:22"
            },
            "returnParameters": {
              "id": 3750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3749,
                  "mutability": "mutable",
                  "name": "rtn",
                  "nameLocation": "373:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3777,
                  "src": "355:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MyStruct_$3711_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct testmapping.MyStruct[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3747,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3746,
                        "name": "MyStruct",
                        "nameLocations": [
                          "355:8:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3711,
                        "src": "355:8:22"
                      },
                      "referencedDeclaration": 3711,
                      "src": "355:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MyStruct_$3711_storage_ptr",
                        "typeString": "struct testmapping.MyStruct"
                      }
                    },
                    "id": 3748,
                    "nodeType": "ArrayTypeName",
                    "src": "355:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MyStruct_$3711_storage_$dyn_storage_ptr",
                      "typeString": "struct testmapping.MyStruct[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "354:23:22"
            },
            "scope": 3778,
            "src": "322:148:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3779,
        "src": "58:415:22",
        "usedErrors": []
      }
    ],
    "src": "32:441:22"
  },
  "bytecode": "608060405234801561001057600080fd5b506040805180820182526105398152611ca36020808301918252600080805280825292517fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb580546001600160a01b039283166001600160a01b03199182161790915592517fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb655845180860190955261115c85526115b3858301908152600185529390915292517fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d805491909416911617909155517fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7e55610246806101156000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638a054ac214610030575b600080fd5b61003861004e565b60405161004591906101a2565b60405180910390f35b6040805160028082526060828101909352816020015b604080518082019091526000808252602082015281526020019060019003908161006457505060008080526020818152604080518082019091527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5546001600160a01b031681527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb65491810191909152825192935091839190610109576101096101fa565b602090810291909101810191909152600160008181528252604080518082019091527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d546001600160a01b031681527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7e549281019290925282518391908110610194576101946101fa565b602002602001018190525090565b602080825282518282018190526000919060409081850190868401855b828110156101ed57815180516001600160a01b031685528601518685015292840192908501906001016101bf565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220106e7af5aecc41a52ad5450c7b64a2e00e4309f14b313e289ec64fdaa3adbb2464736f6c63430008110033",
  "bytecodeSha1": "ab1dab276f4c8304ff314b0ad2181bac10d22e0c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "testmapping",
  "coverageMap": {
    "branches": {
      "22": {}
    },
    "statements": {
      "22": {
        "testmapping.d": {
          "0": [
            388,
            411
          ],
          "1": [
            421,
            437
          ],
          "2": [
            447,
            463
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638a054ac214610030575b600080fd5b61003861004e565b60405161004591906101a2565b60405180910390f35b6040805160028082526060828101909352816020015b604080518082019091526000808252602082015281526020019060019003908161006457505060008080526020818152604080518082019091527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5546001600160a01b031681527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb65491810191909152825192935091839190610109576101096101fa565b602090810291909101810191909152600160008181528252604080518082019091527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d546001600160a01b031681527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7e549281019290925282518391908110610194576101946101fa565b602002602001018190525090565b602080825282518282018190526000919060409081850190868401855b828110156101ed57815180516001600160a01b031685528601518685015292840192908501906001016101bf565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220106e7af5aecc41a52ad5450c7b64a2e00e4309f14b313e289ec64fdaa3adbb2464736f6c63430008110033",
  "deployedSourceMap": "58:415:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;322:148;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;394:17;;;409:1;394:17;;;355:21;394:17;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;394:17:22;;;;;;;;;;;;-1:-1:-1;;430:4:22;:7;;;;;;;;421:16;;;;;;;;430:7;421:16;-1:-1:-1;;;;;421:16:22;;;;;;;;;;;;:6;;;;-1:-1:-1;421:16:22;:6;;430:4;421:6;;;;:::i;:::-;;;;;;;;;;;:16;;;;461:1;456:4;:7;;;;;;447:16;;;;;;;;456:7;447:16;-1:-1:-1;;;;;447:16:22;;;;;;;;;;;;:6;;:3;;461:1;447:6;;;;;;:::i;:::-;;;;;;:16;;;;322:148;:::o;14:816:23:-;237:2;289:21;;;359:13;;262:18;;;381:22;;;208:4;;237:2;422;;440:18;;;;481:15;;;208:4;524:280;538:6;535:1;532:13;524:280;;;597:13;;639:9;;-1:-1:-1;;;;;635:35:23;623:48;;711:11;;705:18;691:12;;;684:40;744:12;;;;779:15;;;;667:1;553:9;524:280;;;-1:-1:-1;821:3:23;;14:816;-1:-1:-1;;;;;;;14:816:23:o;967:127::-;1028:10;1023:3;1019:20;1016:1;1009:31;1059:4;1056:1;1049:15;1083:4;1080:1;1073:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    473
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A054AC2 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 DUP2 ADD SWAP1 SWAP4 MSTORE DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x64 JUMPI POP POP PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB6 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD SWAP3 SWAP4 POP SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x109 JUMPI PUSH2 0x109 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 MSTORE DUP3 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH32 0xADA5013122D395BA3C54772283FB069B10426056EF8CA54750CB9BB552A59E7D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH32 0xADA5013122D395BA3C54772283FB069B10426056EF8CA54750CB9BB552A59E7E SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD DUP4 SWAP2 SWAP1 DUP2 LT PUSH2 0x194 JUMPI PUSH2 0x194 PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1ED JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1BF JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH15 0x7AF5AECC41A52AD5450C7B64A2E00E NUMBER MULMOD CALL 0x4B BALANCE RETURNDATACOPY 0x28 SWAP15 0xC6 0x4F 0xDA LOG3 0xAD 0xBB 0x24 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        473
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8A054AC2"
    },
    "38": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "EQ",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "DUP1",
      "path": "22"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        473
      ],
      "op": "REVERT",
      "path": "22"
    },
    "48": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "49": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x38"
    },
    "52": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4E"
    },
    "55": {
      "fn": "testmapping.d",
      "jump": "i",
      "offset": [
        322,
        470
      ],
      "op": "JUMP",
      "path": "22"
    },
    "56": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "57": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "59": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "60": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x45"
    },
    "63": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "64": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "65": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A2"
    },
    "68": {
      "fn": "testmapping.d",
      "jump": "i",
      "offset": [
        322,
        470
      ],
      "op": "JUMP",
      "path": "22"
    },
    "69": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "70": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "72": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "73": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "DUP1",
      "path": "22"
    },
    "74": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "75": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "SUB",
      "path": "22"
    },
    "76": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "77": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "RETURN",
      "path": "22"
    },
    "78": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "79": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 0,
      "value": "0x40"
    },
    "81": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "DUP1",
      "path": "22"
    },
    "82": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "83": {
      "fn": "testmapping.d",
      "offset": [
        409,
        410
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "85": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "DUP1",
      "path": "22"
    },
    "86": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "DUP3",
      "path": "22"
    },
    "87": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "88": {
      "fn": "testmapping.d",
      "offset": [
        355,
        376
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "90": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "DUP3",
      "path": "22"
    },
    "91": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "DUP2",
      "path": "22"
    },
    "92": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "ADD",
      "path": "22"
    },
    "93": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "94": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "95": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "96": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "DUP2",
      "path": "22"
    },
    "97": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "99": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "ADD",
      "path": "22"
    },
    "100": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "103": {
      "op": "DUP1"
    },
    "104": {
      "op": "MLOAD"
    },
    "105": {
      "op": "DUP1"
    },
    "106": {
      "op": "DUP3"
    },
    "107": {
      "op": "ADD"
    },
    "108": {
      "op": "SWAP1"
    },
    "109": {
      "op": "SWAP2"
    },
    "110": {
      "op": "MSTORE"
    },
    "111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "113": {
      "op": "DUP1"
    },
    "114": {
      "op": "DUP3"
    },
    "115": {
      "op": "MSTORE"
    },
    "116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "118": {
      "op": "DUP3"
    },
    "119": {
      "op": "ADD"
    },
    "120": {
      "op": "MSTORE"
    },
    "121": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "DUP2",
      "path": "22"
    },
    "122": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "123": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "125": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "ADD",
      "path": "22"
    },
    "126": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "127": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "129": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "130": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "SUB",
      "path": "22"
    },
    "131": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "132": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "DUP2",
      "path": "22"
    },
    "133": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x64"
    },
    "136": {
      "fn": "testmapping.d",
      "offset": [
        394,
        411
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "137": {
      "op": "POP"
    },
    "138": {
      "op": "POP"
    },
    "139": {
      "fn": "testmapping.d",
      "offset": [
        430,
        434
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 1,
      "value": "0x0"
    },
    "141": {
      "fn": "testmapping.d",
      "offset": [
        430,
        437
      ],
      "op": "DUP1",
      "path": "22"
    },
    "142": {
      "fn": "testmapping.d",
      "offset": [
        430,
        437
      ],
      "op": "DUP1",
      "path": "22"
    },
    "143": {
      "fn": "testmapping.d",
      "offset": [
        430,
        437
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "144": {
      "fn": "testmapping.d",
      "offset": [
        430,
        437
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "146": {
      "fn": "testmapping.d",
      "offset": [
        430,
        437
      ],
      "op": "DUP2",
      "path": "22"
    },
    "147": {
      "fn": "testmapping.d",
      "offset": [
        430,
        437
      ],
      "op": "DUP2",
      "path": "22"
    },
    "148": {
      "fn": "testmapping.d",
      "offset": [
        430,
        437
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "149": {
      "fn": "testmapping.d",
      "offset": [
        430,
        437
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "151": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "DUP1",
      "path": "22"
    },
    "152": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "153": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "DUP1",
      "path": "22"
    },
    "154": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "DUP3",
      "path": "22"
    },
    "155": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "ADD",
      "path": "22"
    },
    "156": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "157": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "158": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "159": {
      "fn": "testmapping.d",
      "offset": [
        430,
        437
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
    },
    "192": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "199": {
      "op": "SHL"
    },
    "200": {
      "op": "SUB"
    },
    "201": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "AND",
      "path": "22"
    },
    "202": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "DUP2",
      "path": "22"
    },
    "203": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "204": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB6"
    },
    "237": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "238": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "239": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "DUP2",
      "path": "22"
    },
    "240": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "ADD",
      "path": "22"
    },
    "241": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "242": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "243": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "244": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "245": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "DUP3",
      "path": "22"
    },
    "246": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "247": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "248": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "249": {
      "op": "POP"
    },
    "250": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "251": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "DUP4",
      "path": "22"
    },
    "252": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "253": {
      "fn": "testmapping.d",
      "offset": [
        430,
        434
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "254": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x109"
    },
    "257": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "258": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x109"
    },
    "261": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FA"
    },
    "264": {
      "fn": "testmapping.d",
      "jump": "i",
      "offset": [
        421,
        427
      ],
      "op": "JUMP",
      "path": "22"
    },
    "265": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "266": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "268": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "269": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "DUP2",
      "path": "22"
    },
    "270": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "MUL",
      "path": "22"
    },
    "271": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "272": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "273": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "274": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "ADD",
      "path": "22"
    },
    "275": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "DUP2",
      "path": "22"
    },
    "276": {
      "fn": "testmapping.d",
      "offset": [
        421,
        427
      ],
      "op": "ADD",
      "path": "22"
    },
    "277": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "278": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "279": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "280": {
      "fn": "testmapping.d",
      "offset": [
        421,
        437
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "281": {
      "fn": "testmapping.d",
      "offset": [
        461,
        462
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 2,
      "value": "0x1"
    },
    "283": {
      "fn": "testmapping.d",
      "offset": [
        456,
        460
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "285": {
      "fn": "testmapping.d",
      "offset": [
        456,
        463
      ],
      "op": "DUP2",
      "path": "22"
    },
    "286": {
      "fn": "testmapping.d",
      "offset": [
        456,
        463
      ],
      "op": "DUP2",
      "path": "22"
    },
    "287": {
      "fn": "testmapping.d",
      "offset": [
        456,
        463
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "288": {
      "fn": "testmapping.d",
      "offset": [
        456,
        463
      ],
      "op": "DUP3",
      "path": "22"
    },
    "289": {
      "fn": "testmapping.d",
      "offset": [
        456,
        463
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "290": {
      "fn": "testmapping.d",
      "offset": [
        456,
        463
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "292": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "DUP1",
      "path": "22"
    },
    "293": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "294": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "DUP1",
      "path": "22"
    },
    "295": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "DUP3",
      "path": "22"
    },
    "296": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "ADD",
      "path": "22"
    },
    "297": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "298": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "299": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "300": {
      "fn": "testmapping.d",
      "offset": [
        456,
        463
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xADA5013122D395BA3C54772283FB069B10426056EF8CA54750CB9BB552A59E7D"
    },
    "333": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "340": {
      "op": "SHL"
    },
    "341": {
      "op": "SUB"
    },
    "342": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "AND",
      "path": "22"
    },
    "343": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "DUP2",
      "path": "22"
    },
    "344": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "345": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xADA5013122D395BA3C54772283FB069B10426056EF8CA54750CB9BB552A59E7E"
    },
    "378": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "379": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "380": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "DUP2",
      "path": "22"
    },
    "381": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "ADD",
      "path": "22"
    },
    "382": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "383": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "384": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "385": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "386": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "DUP3",
      "path": "22"
    },
    "387": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "388": {
      "fn": "testmapping.d",
      "offset": [
        447,
        450
      ],
      "op": "DUP4",
      "path": "22"
    },
    "389": {
      "fn": "testmapping.d",
      "offset": [
        447,
        450
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "390": {
      "fn": "testmapping.d",
      "offset": [
        461,
        462
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "391": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "DUP2",
      "path": "22"
    },
    "392": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "LT",
      "path": "22"
    },
    "393": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x194"
    },
    "396": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "397": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x194"
    },
    "400": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1FA"
    },
    "403": {
      "fn": "testmapping.d",
      "jump": "i",
      "offset": [
        447,
        453
      ],
      "op": "JUMP",
      "path": "22"
    },
    "404": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "405": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "407": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "MUL",
      "path": "22"
    },
    "408": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "410": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "ADD",
      "path": "22"
    },
    "411": {
      "fn": "testmapping.d",
      "offset": [
        447,
        453
      ],
      "op": "ADD",
      "path": "22"
    },
    "412": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "DUP2",
      "path": "22"
    },
    "413": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "414": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "415": {
      "fn": "testmapping.d",
      "offset": [
        447,
        463
      ],
      "op": "POP",
      "path": "22"
    },
    "416": {
      "fn": "testmapping.d",
      "offset": [
        322,
        470
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "417": {
      "fn": "testmapping.d",
      "jump": "o",
      "offset": [
        322,
        470
      ],
      "op": "JUMP",
      "path": "22"
    },
    "418": {
      "op": "JUMPDEST"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "421": {
      "op": "DUP1"
    },
    "422": {
      "op": "DUP3"
    },
    "423": {
      "op": "MSTORE"
    },
    "424": {
      "op": "DUP3"
    },
    "425": {
      "op": "MLOAD"
    },
    "426": {
      "op": "DUP3"
    },
    "427": {
      "op": "DUP3"
    },
    "428": {
      "op": "ADD"
    },
    "429": {
      "op": "DUP2"
    },
    "430": {
      "op": "SWAP1"
    },
    "431": {
      "op": "MSTORE"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "434": {
      "op": "SWAP2"
    },
    "435": {
      "op": "SWAP1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "438": {
      "op": "SWAP1"
    },
    "439": {
      "op": "DUP2"
    },
    "440": {
      "op": "DUP6"
    },
    "441": {
      "op": "ADD"
    },
    "442": {
      "op": "SWAP1"
    },
    "443": {
      "op": "DUP7"
    },
    "444": {
      "op": "DUP5"
    },
    "445": {
      "op": "ADD"
    },
    "446": {
      "op": "DUP6"
    },
    "447": {
      "op": "JUMPDEST"
    },
    "448": {
      "op": "DUP3"
    },
    "449": {
      "op": "DUP2"
    },
    "450": {
      "op": "LT"
    },
    "451": {
      "op": "ISZERO"
    },
    "452": {
      "op": "PUSH2",
      "value": "0x1ED"
    },
    "455": {
      "op": "JUMPI"
    },
    "456": {
      "op": "DUP2"
    },
    "457": {
      "op": "MLOAD"
    },
    "458": {
      "op": "DUP1"
    },
    "459": {
      "op": "MLOAD"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "466": {
      "op": "SHL"
    },
    "467": {
      "op": "SUB"
    },
    "468": {
      "op": "AND"
    },
    "469": {
      "op": "DUP6"
    },
    "470": {
      "op": "MSTORE"
    },
    "471": {
      "op": "DUP7"
    },
    "472": {
      "op": "ADD"
    },
    "473": {
      "op": "MLOAD"
    },
    "474": {
      "op": "DUP7"
    },
    "475": {
      "op": "DUP6"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "op": "MSTORE"
    },
    "478": {
      "op": "SWAP3"
    },
    "479": {
      "op": "DUP5"
    },
    "480": {
      "op": "ADD"
    },
    "481": {
      "op": "SWAP3"
    },
    "482": {
      "op": "SWAP1"
    },
    "483": {
      "op": "DUP6"
    },
    "484": {
      "op": "ADD"
    },
    "485": {
      "op": "SWAP1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "ADD"
    },
    "489": {
      "op": "PUSH2",
      "value": "0x1BF"
    },
    "492": {
      "op": "JUMP"
    },
    "493": {
      "op": "JUMPDEST"
    },
    "494": {
      "op": "POP"
    },
    "495": {
      "op": "SWAP2"
    },
    "496": {
      "op": "SWAP8"
    },
    "497": {
      "op": "SWAP7"
    },
    "498": {
      "op": "POP"
    },
    "499": {
      "op": "POP"
    },
    "500": {
      "op": "POP"
    },
    "501": {
      "op": "POP"
    },
    "502": {
      "op": "POP"
    },
    "503": {
      "op": "POP"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "jump": "o",
      "op": "JUMP"
    },
    "506": {
      "op": "JUMPDEST"
    },
    "507": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "522": {
      "op": "MSTORE"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "527": {
      "op": "REVERT"
    }
  },
  "sha1": "f4873b036295839068ae0090400fa5f832fe000d",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\ncontract testmapping {\n    struct MyStruct {\n        address subber;\n        uint something;\n    }\n    mapping(uint => MyStruct) data;\n    constructor() {\n        data[0] = MyStruct(address(1337), 7331);\n        data[1] = MyStruct(address(4444), 5555);\n    }\n\n    function d() public view returns(MyStruct[] memory rtn) {\n        rtn = new MyStruct[](2);\n        rtn[0] = data[0];\n        rtn[1] = data[1];\n    }\n\n}",
  "sourceMap": "58:415:22:-:0;;;197:119;;;;;;;;;-1:-1:-1;231:29:22;;;;;;;;248:4;231:29;;255:4;231:29;;;;;;;-1:-1:-1;221:7:22;;;;;;:39;;:7;:39;;-1:-1:-1;;;;;221:39:22;;;-1:-1:-1;;;;;;221:39:22;;;;;;;;;;;280:29;;;;;;;;297:4;280:29;;304:4;280:29;;;;;;221:39;270:7;;;;;;:39;;:7;:39;;;;;;;;;;;;;;;58:415;;;;;;",
  "sourcePath": "contracts/utils/testmapping.sol",
  "type": "contract"
}